input {
	jdbc {
		codec => "json"
    jdbc_driver_library => "postgresql-9.4.1208.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://${DBHOST}:${DBPORT}/dataportal"
    jdbc_user => "${DBUSER}"
    jdbc_password => "${DBPASSWORD}"
    statement => "SELECT public.occurrence.auto_id AS id, public.occurrence.scientificname AS canonical, public.occurrence.taxonrank as taxon_rank, public.occurrence.decimallatitude as latitude, public.occurrence.decimallongitude as longitude, public.occurrence.country as country_name, public.occurrence.county as county_name, public.occurrence.locality as locality, public.occurrence.syear as year, public.occurrence.smonth as month, public.occurrence.sday as day, public.occurrence.eventdate as occurrence_date, public.occurrence.verbatimelevation as verbatim_elevation, public.occurrence.maximumelevationinmeters as maximum_elevation, public.occurrence.minimumelevationinmeters as minimum_elevation, public.occurrence.stateprovince as department_name, public.occurrence.kingdom as kingdom, public.occurrence.phylum as phylum, public.occurrence._class as class, public.occurrence._order as order, public.occurrence.family as family, public.occurrence.genus as genus, public.occurrence.species as species, public.occurrence.specificepithet as specific_epithet, public.occurrence.infraspecificepithet as infraspecific_epithet, public.publisher.auto_id as provider_id, public.publisher.name AS provider_name, public.publisher.description as provider_description, public.publisher.address as provider_address, public.publisher.city as provider_city, public.publisher.homepage as provider_website_url, public.publisher.logo_url as provider_logo_url, public.publisher.email as provider_email, public.publisher.phone as provider_phone, public.dwca_resource.id as resource_id, public.dwca_resource.name as resource_name, public.resource_metadata.title as resource_title, public.resource_metadata._abstract as resource_description, public.resource_metadata.intellectual_rights as resource_intellectual_rights, public.resource_metadata.citation as resource_citation, public.resource_metadata.resource_logo_url as resource_logo_url, public.resource_metadata.publication_date as resource_publication_date, public.resource_metadata.gbif_package_id AS resource_gbif_package_id, public.resource_metadata.alternate_identifier as resource_alternate_identifier, public.resource_metadata.language as resource_language, public.resource_metadata.keyword as resource_keyword, public.resource_metadata.hierarchy_level as resource_hierarchy_level, public.resource_metadata.collection_identifier as collection_identifier, public.resource_metadata.collection_name as collection_name, public.occurrence.collectioncode as collection_code, public.occurrence.institutioncode as institution_code, public.occurrence.catalognumber as catalog_number, public.occurrence.basisofrecord as basis_of_record_name, public.occurrence.recordedby as recorded_by, public.occurrence.habitat as habitat FROM public.occurrence JOIN public.dwca_resource ON public.occurrence.resource_id = public.dwca_resource.id JOIN public.publisher ON public.dwca_resource.publisher_fkey = public.publisher.auto_id JOIN public.resource_metadata ON public.dwca_resource.id = public.resource_metadata.dwca_resource_id"
  }
}
# The filter part of this file is commented out to indicate that it is
# optional.
filter {
	if ![occurrence_date] {
		mutate {
    	remove_field => [occurrence_date]
		}
	}
	if [occurrence_date] == "" {
		mutate {
    	remove_field => [occurrence_date]
		}
	}
	if ([latitude] and [longitude]) {
		mutate {
			add_field => {
				"[location][lat]" => "%{[latitude]}"
				"[location][lon]" => "%{[longitude]}"
			}
		}
	}
	if [kingdom] {
		mutate {
			add_field => {
				"[taxonomy][kingdom_name]" => "%{[kingdom]}"
			}
		}
	}
	if [phylum] {
		mutate {
			add_field => {
				"[taxonomy][phylum_name]" => "%{[phylum]}"
			}
		}
	}
	if [class] {
		mutate {
			add_field => {
				"[taxonomy][class_name]" => "%{[class]}"
			}
		}
	}
	if [order] {
		mutate {
			add_field => {
				"[taxonomy][order_name]" => "%{[order]}"
			}
		}
	}
	if [family] {
		mutate {
			add_field => {
				"[taxonomy][family_name]" => "%{[family]}"
			}
		}
	}
	if [genus] {
		mutate {
			add_field => {
				"[taxonomy][genus_name]" => "%{[genus]}"
			}
		}
	}
	if [species] {
		mutate {
			add_field => {
				"[taxonomy][species_name]" => "%{[species]}"
			}
		}
	}
	if [specific_epithet] {
		mutate {
			add_field => {
				"[taxonomy][specific_epithet]" => "%{[specific_epithet]}"
			}
		}
	}
	if [infraspecific_epithet] {
		mutate {
			add_field => {
				"[taxonomy][infraspecific_epithet]" => "%{[infraspecific_epithet]}"
			}
		}
	}
	if [provider_id] {
		mutate {
			add_field => {
				"[provider][id]" => "%{[provider_id]}"
			}
		}
	}
	if [provider_name] {
		mutate {
			add_field => {
				"[provider][name]" => "%{[provider_name]}"
			}
		}
	}
	if [provider_description] {
		mutate {
			add_field => {
				"[provider][description]" => "%{[provider_description]}"
			}
		}
	}
	if [provider_address] {
		mutate {
			add_field => {
				"[provider][address]" => "%{[provider_address]}"
			}
		}
	}
	if [provider_city] {
		mutate {
			add_field => {
				"[provider][city]" => "%{[provider_city]}"
			}
		}
	}
	if [provider_website_url] {
		mutate {
			add_field => {
				"[provider][website_url]" => "%{[provider_website_url]}"
			}
		}
	}
	if [provider_email] {
		mutate {
			add_field => {
				"[provider][email]" => "%{provider_email}"
			}
		}
	}
	if [provider_logo_url] {
		mutate {
			add_field => {
				"[provider][logo_url]" => "%{[provider_logo_url]}"
			}
		}
	}
	if [provider_phone] {
		mutate {
			add_field => {
				"[provider][phone]" => "%{[provider_phone]}"
			}
		}
	}
	if [resource_id] {
		mutate {
			add_field => {
				"[resource][id]" => "%{[resource_id]}"
			}
		}
	}
	if [resource_name] {
		mutate {
			add_field => {
				"[resource][name]" => "%{[resource_name]}"
			}
		}
	}
	if [resource_title] {
		mutate {
			add_field => {
				"[resource][title]" => "%{[resource_title]}"
			}
		}
	}
	if [resource_description] {
		mutate {
			add_field => {
				"[resource][description]" => "%{[resource_description]}"
			}
		}
	}
	if [resource_intellectual_rights] {
		mutate {
			add_field => {
				"[resource][intellectual_rights]" => "%{[resource_intellectual_rights]}"
			}
		}
	}
	if [resource_citation] {
		mutate {
			add_field => {
				"[resource][citation]" => "%{[resource_citation]}"
			}
		}
	}
	if [resource_logo_url] {
		mutate {
			add_field => {
				"[resource][logo_url]" => "%{[resource_logo_url]}"
			}
		}
	}
	if [resource_publication_date] {
		mutate {
			add_field => {
				"[resource][publication_date]" => "%{[resource_publication_date]}"
			}
		}
	}
	if [resource_gbif_package_id] {
		mutate {
			add_field => {
				"[resource][gbif_package_id]" => "%{[resource_gbif_package_id]}"
			}
		}
	}
	if [resource_alternate_identifier] {
		mutate {
			add_field => {
				"[resource][alternate_identifier]" => "%{[resource_alternate_identifier]}"
			}
		}
	}
	if [resource_language] {
		mutate {
			add_field => {
				"[resource][language]" => "%{[resource_language]}"
			}
		}
	}
	if [resource_keyword] {
		mutate {
			add_field => {
				"[resource][keyword]" => "%{[resource_keyword]}"
			}
		}
	}
	if [resource_hierarchy_level] {
		mutate {
			add_field => {
				"[resource][hierarchy_level]" => "%{[resource_hierarchy_level]}"
			}
		}
	}
	if [collection_identifier] {
		mutate {
			add_field => {
				"[collection][id]" => "%{[collection_identifier]}"
			}
		}
	}
	if [collection_name] {
		mutate {
			add_field => {
				"[collection][name]" => "%{[collection_name]}"
			}
		}
	}
	if [collection_code] {
		mutate {
			add_field => {
				"[collection][code]" => "%{[collection_code]}"
			}
		}
	}
	if [institution_code] {
		mutate {
			add_field => {
				"[institution][code]" => "%{[institution_code]}"
			}
		}
	}
	if [catalog_number] {
		mutate {
			add_field => {
				"[catalog][number]" => "%{[catalog_number]}"
			}
		}
	}
	if [basis_of_record_name] {
		mutate {
			add_field => {
				"[basis_of_record][name]" => "%{[basis_of_record_name]}"
			}
		}
	}
	mutate {
    remove_field => [latitude, longitude, kingdom, phylum, class, order, family, genus, species, specific_epithet, infraspecific_epithet, provider_id, provider_name, provider_description, provider_address, provider_city, provider_website_url, provider_logo_url, provider_email, provider_phone, resource_id, resource_name, resource_title, resource_description, resource_intellectual_rights, resource_citation, resource_logo_url, resource_publication_date, resource_gbif_package_id, resource_alternate_identifier, resource_language, resource_keyword, resource_hierarchy_level, collection_identifier, collection_name, collection_code, institution_code, catalog_number, basis_of_record_name]
	}
}
output {
#	stdout {
#		codec => json_lines
#	}
	elasticsearch {
    index => "sibdataportal"
    document_type => "occurrence"
    document_id => "%{id}"
    hosts => ["192.168.99.100"]
  }
}